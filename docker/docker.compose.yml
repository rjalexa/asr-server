services:
  frontend:
    build:
      context: ..
      dockerfile: docker/development/Dockerfile.dev
    container_name: asr-frontend
    ports:
      - "3000:3000"
    volumes:
      - ..:/app
      - /app/node_modules
      - /home/bob/code/asr-server/.secrets:/app/.secrets
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - WHISPER_API_URL=http://whisper-backend:9000
      - WHISPERX_API_URL=http://whisperx-api:8000
      - WHISPER_MODEL=${WHISPER_MODEL:-base}
      - WHISPER_DEFAULT_LANGUAGE=${WHISPER_DEFAULT_LANGUAGE:-en}
      - SUPPORTED_LANGUAGES=${SUPPORTED_LANGUAGES:-en,it,fr,es,de}
    depends_on:
      - whisper-backend
    networks:
      - whisper-network

  whisper-backend:
    image: onerahmet/openai-whisper-asr-webservice:latest
    container_name: whisper-backend
    environment:
      - ASR_MODEL=${WHISPER_MODEL:-base}
      - ASR_ENGINE=openai_whisper
    volumes:
      - whisper-models:/root/.cache/whisper
    networks:
      - whisper-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  whisperx-api:
    image: pluja/whisperx-api:cpu
    container_name: whisperx-api
    volumes:
      - ../data/uploads:/app/data
      - ../data/whisper_models:/app/wx_models
    environment:
      WHISPER_THREADS: 2
      WHISPER_DEVICE: cpu
    networks:
      - whisper-network

volumes:
  whisper-models:

networks:
  whisper-network:
    driver: bridge
